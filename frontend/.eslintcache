[{"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/serviceWorker.js":"1","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/store.js":"2","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/index.js":"3","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/Header/Header.jsx":"4","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/containers/App.js":"5","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/List/List.jsx":"6","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/List/LItem.jsx":"7","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/shorterSlice.js":"8","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/shorterActions.js":"9","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/config/axios.js":"10","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/authSlice.js":"11","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/AuthForm/AuthForm.jsx":"12","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/authActions.js":"13"},{"size":5141,"mtime":1608565060856,"results":"14","hashOfConfig":"15"},{"size":260,"mtime":1608704495050,"results":"16","hashOfConfig":"15"},{"size":782,"mtime":1608704014340,"results":"17","hashOfConfig":"15"},{"size":575,"mtime":1608713113153,"results":"18","hashOfConfig":"15"},{"size":2171,"mtime":1608727621982,"results":"19","hashOfConfig":"15"},{"size":927,"mtime":1608727575805,"results":"20","hashOfConfig":"15"},{"size":971,"mtime":1608727586789,"results":"21","hashOfConfig":"15"},{"size":797,"mtime":1608711759967,"results":"22","hashOfConfig":"15"},{"size":851,"mtime":1608708114992,"results":"23","hashOfConfig":"15"},{"size":139,"mtime":1608565837048,"results":"24","hashOfConfig":"15"},{"size":1551,"mtime":1608714050777,"results":"25","hashOfConfig":"15"},{"size":2047,"mtime":1608711647819,"results":"26","hashOfConfig":"15"},{"size":1069,"mtime":1608713900216,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"42vo1k",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/serviceWorker.js",[],["56","57"],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/store.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/index.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/Header/Header.jsx",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/containers/App.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/List/List.jsx",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/List/LItem.jsx",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/shorterSlice.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/shorterActions.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/config/axios.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/authSlice.js",[],"/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/components/AuthForm/AuthForm.jsx",["58"],"import React, {useState, useEffect} from \"react\";\nimport {Pane, majorScale, Button, AddIcon, ArrowRightIcon, FormField, TextInput} from \"evergreen-ui\";\nimport PropTypes from \"prop-types\"\n\nconst initialForm = {\n    login: \"\",\n    password: \"\"\n}\nconst AuthForm = ({onRegistartion, onLogin, isSended, isLoad}) => {\n    const [form, setForm] = useState(initialForm)\n    useEffect(() => {\n        if (isSended) {\n            setForm(initialForm)\n        }\n    }, [form])\n    const onChangeHandler = e => {\n        const {value, name} = e.target\n        setForm(prev => ({...prev, [name]: value}))\n    }\n    return (\n        <Pane maxWidth={500} paddingX={majorScale(1)} marginX={\"auto\"}\n              background={\"blueTint\"}>\n            <Pane marginBottom={majorScale(1)}>\n                <FormField labelFor={\"email\"} label=\"Email\"/>\n                <TextInput name={\"login\"} onChange={onChangeHandler}\n                           value={form.login}\n                           type={\"email\"} required\n                           autoComplete={\"off\"}\n                           id={\"email\"} width={\"100%\"}/>\n            </Pane>\n            <Pane>\n                <FormField labelFor={\"password\"} label=\"Password\"/>\n                <TextInput name={\"password\"} onChange={onChangeHandler}\n                           value={form.password}\n                           type={\"password\"}\n                           id={\"password\"}\n                           width={\"100%\"}/>\n            </Pane>\n            <Pane paddingY={majorScale(2)}>\n                <Button disabled={isLoad} onClick={onRegistartion.bind(null, form)}\n                        iconBefore={AddIcon} marginRight={12}>Register</Button>\n                <Button disabled={isLoad} onClick={onLogin.bind(null, form)}\n                        iconAfter={ArrowRightIcon} appearance={\"primary\"}>Login</Button>\n            </Pane>\n        </Pane>\n    );\n};\nAuthForm.propTypes = {\n    onRegistration: PropTypes.func,\n    onLogin: PropTypes.func,\n    isSended: PropTypes.bool\n}\n\nexport default AuthForm;\n","/home/yevgeniy/Общедоступные/STUDY/month-11/81-mongo/frontend/src/redux/authActions.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":8,"nodeType":"65","endLine":15,"endColumn":14,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isSended'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [form, isSended]",{"range":"72","text":"73"},[458,464],"[form, isSended]"]